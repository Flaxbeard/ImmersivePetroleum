buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
//----------------------------------------------------------------------------------------------------------------------

version = '3.4.0-12'
group = 'flaxbeard.immersivepetroleum'
archivesBaseName = 'ImmersivePetroleum-1.16.5'

repositories {
	maven {	name = "BlameJared";	url = "https://maven.blamejared.com/" }         // IE & CT Files
	maven { name = "DVS1 Maven FS"; url = "https://dvs1.progwml6.com/files/maven" } // JEI & Tinkers Files
	maven { url = 'https://maven.latmod.com/' }                                     // Needed for JEI
	
	flatDir { dirs 'flatdir' }
}

sourceSets {
	main {
		resources {
			srcDirs = [
				"$rootDir/src/main/resources",
				"$rootDir/src/generated/resources"
			]
		}
	}
	datagen {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

minecraft {
	mappings channel: 'snapshot', version: '20210309-1.16.5'
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			
			arg '-nogui'
			
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			
			args '--mod', 'immersivepetroleum',
				 '--all',
				 '--output', file('src/generated/resources/'),
				 '--validate',
				 '--existing', sourceSets.main.resources.srcDirs[0],
				 '--existing-mod', 'immersiveengineering'
			
			mods {
				immersivepetroleum {
					source sourceSets.main
					source sourceSets.datagen
				}
			}
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:1.16.5-36.2.0"
	
	compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.6-141")
	//compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.0-135:api")
	datagenCompile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.6-141:datagen")
	
	compile fg.deobf(group: "com.blamejared.crafttweaker", name: "CraftTweaker-1.16.5", version: "7.1.0.103")
	
	runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.4.88")
	compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.4.88:api")
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'
		expand 'version': project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml'
	}
	outputs.upToDateWhen { false }
}

jar {
	manifest {
		attributes([
			"Specification-Title": "immersivepetroleum",
			"Specification-Vendor": "flaxbeard",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"flaxbeard",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar'; }

publishing {
	publications { mavenJava(MavenPublication) { artifact reobfArtifact } }
	repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}
